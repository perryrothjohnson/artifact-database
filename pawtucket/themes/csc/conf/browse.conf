cache_timeout = 0

# configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		exhibit_code_facet = {
			type = attribute,
			element_code = phase_3_exhibit_code,
			group_mode = hierarchical,
			show_hierarchy = 1,
			# hierarchical_delimiter = &nbsp;&#10141;&nbsp;
			remove_first_items = 0,
			hierarchy_limit = 10,
			hierarchy_order = DESC,
			label_singular = _("Phase III exhibit code"),
			label_plural = _("Phase III exhibit codes"),
			indefinite_article = a
		},
		storage_location_facet = {
			type = authority,
			table = ca_storage_locations,
			relationship_table = ca_objects_x_storage_locations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			group_mode = hierarchical,
			show_hierarchy = 1,
			# hierarchical_delimiter = &nbsp;&#10141;&nbsp;
			remove_first_items = 0,
			hierarchy_limit = 10,
			hierarchy_order = DESC,
			label_singular = _("Storage location"),
			label_plural = _("Storage locations"),
			indefinite_article = a
		},
		installation_group_facet = {
			type = attribute,
			element_code = install_group_var,
			group_mode = hierarchical,
			show_hierarchy = 1,
			# hierarchical_delimiter = &nbsp;&#10141;&nbsp;
			remove_first_items = 0,
			hierarchy_limit = 10,
			hierarchy_order = DESC,
			label_singular = _("Installation group"),
			label_plural = _("Installation groups"),
			indefinite_article = an
		},
		title_facet = {
			type = label,
			restrict_to_types = [],
			preferred_labels_only = 1,
			group_mode = alphabetical,
			label_singular = _("Object title"),
			label_plural = _("Object titles"),
			indefinite_article = a
		},
		entity_facet = {
			type = authority,
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 0,
			groupings = {
				label = _("Name"),
				type = _("Type"),
				relationship_types = _("Role")
			},
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			indefinite_article = an,
			label_singular = _("Person/organization"),
			label_plural = _("People/organizations")
		},
		supergroup_facet = {
			type = attribute,
			element_code = supergroup,
			group_mode = alphabetical,
			label_singular = _("Supergroup"),
			label_plural = _("Supergroups"),
			indefinite_article = a
		},
		display_method_facet = {
			type = attribute,
			element_code = current_display_method,
			group_mode = alphabetical,
			label_singular = _("Phase III display method"),
			label_plural = _("Phase III display methods"),
			indefinite_article = a
		},
		condition_facet = {
			type = attribute,
			element_code = condition,
			group_mode = none,
			label_singular = _("Condition"),
			label_plural = _("Condition"),
			indefinite_article = a
		}
	}
}

# ------------------------------------------------------------------------------
# configuration for entity browse
ca_entities = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			group_mode = none,
			order_by_label_fields = [name_plural],
			label_singular = _("type"),
			label_plural = _("types")
		}
	}
}

# -------------------------------------------------------------------------------
# configuration for collection browse
ca_collections = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			group_mode = none,
			order_by_label_fields = [name_plural],
			label_singular = _("type"),
			label_plural = _("types")
		}
	}
}


#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [exhibitcode_facet, has_media_facet],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
#			map = {
#				data = ca_objects.georeference,
#				display = {
#					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
#					description_template = <p>^ca_objects.description</p>,
#					icon = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div>	
#				}
#			},
#			timeline = {
#				data = ca_objects.creation_date,
#				display = {
#					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
#					description_template = <p>^ca_objects.description</p>,
#					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
#					caption_template = <em>^ca_objects.caption</em>,
#					image = ^ca_object_representations.media.small,
#					icon = ^ca_object_representations.media.icon
#				}
#			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		showLetterBarFrom = ca_entity_labels.surname,
		showLetterBarSorts = [ca_entity_labels.surname;ca_entity_labels.forename],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
#	occurrences = {
#		displayName = _(Works),
#		labelSingular = _("work"),
# 		labelPlural = _("works"),
#		table = ca_occurrences,
#		restrictToTypes = [],
#		showLetterBarFrom = ca_occurrence_labels.name,
#		showLetterBarSorts = [ca_occurrence_labels.name],
#		
#		# formats available for display of results
#		# possible values are: images, list, timeline, map
#		views = {
#			list = {}
#		},
#		
#		sortBy = {
#			Relevance = _natural,
#			Identifier = ca_occurrences.idno,
#			Name = ca_occurrence_labels.name
#		},
#		# --- sortControlType = dropdown or list
#		sortControlType = dropdown
#	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =
